// Gradle plugins DSL standard
plugins {
    id 'java'
    // Can enable jacoco but need to disable Clover
    //id 'jacoco'
    id 'eclipse'
    id 'idea'
    id 'pmd'
    id 'org.springframework.boot' version '2.2.6.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id "com.github.spotbugs" version "4.0.2"
    id "com.bmuschko.clover" version "2.2.5"
}

// Gradle project configurations
configurations { developmentOnly; runtimeClasspath { extendsFrom developmentOnly } }
group = projectGroup                                       
version = projectVersion
sourceCompatibility = projectSourceCompatibility
targetCompatibility = projectTargetCompatibility
bootJar { archiveFileName = "${archiveBaseName.get()}.${archiveExtension.get()}" }
repositories { mavenCentral() }

// Application dependencies
dependencies {
    // Spring dependencies
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-batch'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-devtools'

    // Relational Database dependencies
    //implementation 'mysql:mysql-connector-java:8.0.21'
    //implementation 'org.postgresql:postgresql:42.2.14'
    //implementation 'com.oracle.database.jdbc:ojdbc10:19.7.0.0'
    //implementation 'com.microsoft.sqlserver:mssql-jdbc:8.4.0.jre8'

    // Cloud dependencies
    // implementation 'com.amazonaws:aws-java-sdk:1.11.832'
    // implementation 'com.microsoft.azure:azure:1.36.0'
    // implementation 'com.google.appengine:appengine-api-1.0-sdk:1.9.81'
    // implementation 'com.google.api-client:google-api-client:1.30.10'
    // implementation 'com.google.cloud:google-cloud-datastore:1.104.0'
    // implementation 'com.google.cloud:google-cloud-storage:1.111.2'
    // implementation 'com.google.cloud:google-cloud-dialogflow:2.1.0'
    // implementation 'com.google.cloud:google-cloud-bigquery:1.116.7'

    // Development/Test dependencies
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation('org.springframework.boot:spring-boot-starter-test')
    testImplementation 'junit:junit:4.13'

    // Code Analysis dependencies
    clover 'org.openclover:clover:4.4.1'
}

// Code Analysis/Report configurations
clover { report { html = true }; testIncludes = ['**/*Test.java', '**/*Tests.java'];  targetPercentage = "${codeCoverageRequiredPercentage}%"  }
spotbugs { ignoreFailures = true; showProgress = false }
spotbugsMain { reports { html { enabled = true ; destination = file("$buildDir/reports/spotbugs/spotbugs.html") } } }
tasks.withType(Pmd){ reports{ xml.enabled=true; html.enabled=true } }
pmd { ignoreFailures = true; }
//jacoco { toolVersion = "0.8.5" }
//jacocoTestReport { reports { xml.enabled true; csv.enabled true } }

// Catch all Gradle task to run a complete, clean build
task fullBuild {
    dependsOn 'clean'
    dependsOn 'test'
    dependsOn 'check'
    dependsOn 'cloverGenerateReport'
    dependsOn 'bootJar'

    tasks.findByName('test').mustRunAfter('clean')
    tasks.findByName('check').mustRunAfter('test')
    tasks.findByName('spotbugsMain').mustRunAfter('test')
    tasks.findByName('cloverGenerateReport').mustRunAfter('spotbugsMain')
    tasks.findByName('bootJar').mustRunAfter('cloverGenerateReport')
    //tasks.findByName('bootJar').mustRunAfter('jacocoTestReport')
}
